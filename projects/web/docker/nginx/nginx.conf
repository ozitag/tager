map $http_user_agent $unsupported {
    default                                 0;
    "~MSIE [1-9]\."                         1;
    "~Trident/"                             1;
}

server {
    listen 80;
    charset utf-8;
    root /var/www;

    # security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    add_header X-Powered-By "TAGER (OZiTAG)";

    error_page 502 /502.html;
    location = /502.html { root /var/www/errors/; }
    error_page 503 /503.html;
    location = /503.html { root /var/www/errors/; }
    error_page 504 /504.html;
    location = /504.html { root /var/www/errors/; }

    if ($unsupported = 1){
        rewrite ^(?!.*/static/unsupported/) /unsupported last;
    }

    location ^~ /unsupported {
        root /var/www/errors/;
        try_files $uri $uri.html =404;
    }

    # . files (e.g. .env)
    location ~ /\.(?!well-known) {
        deny all;
    }

    location / {
        # Rewrite from /page/ to /page
        rewrite ^/(.*)/$ /$1 permanent;

        proxy_pass http://web:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
