server {
    listen 80;
    charset utf-8;
    root /var/www;

    # security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    add_header X-Powered-By "TAGER (OZiTAG)";

    error_page 502 /502.html;
    location = /502.html {
      root /var/www/errors/;
    }

    error_page 503 /503.html;
    location = /503.html {
      root /var/www/errors/;
    }

    # . files (e.g. .env)
    location ~ /\.(?!well-known) {
        deny all;
    }

    location /uploads {
        expires max;
        root /var/www;
    }

    # redirect from /api to /api/
    location = /api {
        if ($http_x_custom_scheme) {
            rewrite ^([^.]*[^/])$ $http_x_custom_scheme://$http_host/api/ permanent;
        }

        rewrite ^([^.]*[^/])$ $1/ permanent;
    }

     location @php {
         if ($http_origin ~* "^http://localhost:(3000|8080|8081|8082|4000)$") {
             add_header Access-Control-Allow-Origin "$http_origin" always;
             add_header Access-Control-Allow-Methods "GET, PUT, POST, DELETE, OPTIONS" always;
             add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
             add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
         }

         proxy_pass http://backend:80;
         proxy_http_version 1.1;
         proxy_set_header Host $host;
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header X-Forwarded-Proto $scheme;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection "upgrade";
     }

     location ^~ /api/ {
         rewrite ^/api/?(.*)?$ /$1 break;

         try_files /http-cache$uri?$query_string.json /http-cache$uri$query_string.json @php;
     }
}
