version: "3.4"

services:
  nginx:
    container_name: ${APP_NAME}-nginx
    image: nginx:stable-alpine
    restart: always
    ports:
      - ${APP_PORT}:80
    depends_on:
      - backend
    networks:
      - app-network
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/errors:/var/www/errors
      - ./uploads:/var/www/uploads
      - ./backend/storage/app/public/http-cache:/var/www/http-cache
  web:
    container_name: ${APP_NAME}-web
    restart: always
    build:
      context: ./web
      dockerfile: ../docker/web/Dockerfile
    networks:
      - app-network
  backend:
    container_name: ${APP_NAME}-backend
    restart: always
    working_dir: /var/www
    tty: true
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
      target: dev
    depends_on:
      - db
      - redis
    volumes:
      - ./uploads:/var/www/app/storage/app/public/uploads
      - ./backend:/var/www/app
    environment:
      CONTAINER_ROLE: fpm
      WEB_DOCUMENT_ROOT: /var/www/app/public
      PHP_MEMORY_LIMIT: 1024M
      PHP_UPLOAD_MAX_FILESIZE: 64M
      PHP_POST_MAX_SIZE: 64M
      PHP_MAX_EXECUTION_TIME: 18000
      SERVICE_NGINX_CLIENT_MAX_BODY_SIZE: 100M
    networks:
      - app-network
  db:
    container_name: ${APP_NAME}-db
    image: mysql:8
    restart: always
    ports:
      - ${MYSQL_EXTERNAL_PORT}:3306
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=tager
    networks:
      - app-network
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci', '--skip-log-bin']
  redis:
    image: redis
    container_name: ${APP_NAME}-redis
    restart: always
    networks:
      - app-network
networks:
  app-network:
    driver: bridge

